{"version":3,"sources":["hooks/useToggleState.js","hooks/useInputState.js","reducers/todo.reducer.js","hooks/useLocalStorageReducer.js","contexts/todos.contex.js","todo-app/EditTodoForm.js","todo-app/Todo.js","todo-app/TodoList.js","todo-app/TodoForm.js","hooks/useLocalStorageState.js","hooks/useTodoState.js","todo-app/TodoApp.js","styles/NavBarStyles.js","contexts/ThemeContext.js","contexts/LanguageContext.js","Navbar.js","styles/FormStyles.js","login-form/Form.js","PageContent.js","serviceWorker.js","index.js","App.js"],"names":["useToggle","initialVal","arguments","length","undefined","_useState","useState","_useState2","Object","slicedToArray","state","setState","useInputState","value","setValue","e","target","reducer","action","type","concat","toConsumableArray","id","uuid","task","completed","filter","todo","map","objectSpread","newTask","useLocalStorageReducer","key","defaultVal","_useReducer","useReducer","JSON","parse","window","localStorage","getItem","String","_useReducer2","dispatch","useEffect","setItem","stringify","defaultTodos","TodosContext","createContext","DispatchContext","TodosProvider","props","_useLocalStorageReduc","todoReducer","_useLocalStorageReduc2","todos","react_default","a","createElement","Provider","children","EditTodoForm","_ref","toggleEditForm","_useInputState","_useInputState2","handleChange","reset","useContext","onSubmit","preventDefault","style","marginLeft","width","TextField_default","margin","onChange","fullWidth","autoFocus","memo","_useToggleState","useToggleState","_useToggleState2","isEditing","toggle","ListItem_default","height","todo_app_EditTodoForm","Fragment","Checkbox_default","tabIndex","checked","onClick","textDecoration","ListItemSecondaryAction_default","IconButton_default","aria-label","Delete_default","Edit_default","TodoList","Paper_default","List_default","i","todo_app_Todo","assign","Divider_default","TodoForm","padding","label","useLocalStorageState","val","useTodoState","initialTodos","_useLocalStorageState","_useLocalStorageState2","setTodos","addTodo","newTodoText","removeTodo","todoId","updatedTodos","toggleTodo","editTodo","TodoApp","_useTodoState","backgroundColor","elevation","Grid_default","container","justify","marginTop","item","xs","md","lg","todo_app_TodoForm","todo_app_TodoList","styles","theme","root","marginBottom","grow","flexGrow","menuButton","marginRight","title","defineProperty","display","breakpoints","up","search","position","borderRadius","shape","fade","palette","common","white","&:hover","spacing","unit","searchIcon","alignItems","justifyContent","inputRoot","color","inputInput","paddingTop","paddingRight","paddingBottom","paddingLeft","transition","transitions","create","&:focus","ThemeContext","ThemeProvider","isDarkMode","toggleTheme","LanguageContext","LanguageProvider","language","setLanguage","changeLanguage","content","english","flag","french","spanish","withStyles","_useContext","classes","_content$language","className","AppBar_default","Toolbar_default","Typography_default","variant","Switch_default","Search_default","InputBase_default","placeholder","input","main","paper","flexDirection","avatar","secondary","form","submit","words","signIn","email","password","remember","_words$language","Avatar_default","LockOutlined_default","Select_default","MenuItem_default","FormControl_default","required","InputLabel_default","htmlFor","Input_default","name","FormControlLabel_default","control","Button_default","PageContent","Boolean","location","hostname","match","ReactDOM","render","src_Navbar","login_form_Form","todo_app_TodoApp","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.aac2a6f9.chunk.js","sourcesContent":["import { useState } from \"react\";\nfunction useToggle(initialVal = false) {\n  // call useState, \"reserve piece of state\"\n  const [state, setState] = useState(initialVal);\n  const toggle = () => {\n    setState(!state);\n  };\n  // return piece of state AND a function to toggle it\n  return [state, toggle];\n}\nexport default useToggle;\n","import { useState } from \"react\";\nexport default initialVal => {\n  const [value, setValue] = useState(initialVal);\n  const handleChange = e => {\n    setValue(e.target.value);\n  };\n  const reset = () => {\n    setValue(\"\");\n  };\n  return [value, handleChange, reset];\n};\n","import uuid from \"uuid/v4\";\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"ADD\":\n      return [...state, { id: uuid(), task: action.task, completed: false }];\n    case \"REMOVE\":\n      return state.filter(todo => todo.id !== action.id);\n    case \"TOGGLE\":\n      return state.map(todo =>\n        todo.id === action.id ? { ...todo, completed: !todo.completed } : todo\n      );\n    case \"EDIT\":\n      return state.map(todo =>\n        todo.id === action.id ? { ...todo, task: action.newTask } : todo\n      );\n    default:\n      return state;\n  }\n};\nexport default reducer;\n","import { useReducer, useEffect } from \"react\";\nfunction useLocalStorageReducer(key, defaultVal, reducer) {\n  const [state, dispatch] = useReducer(reducer, defaultVal, () => {\n    let value;\n    try {\n      value = JSON.parse(\n        window.localStorage.getItem(key) || String(defaultVal)\n      );\n    } catch (e) {\n      value = defaultVal;\n    }\n    return value;\n  });\n  useEffect(() => {\n    window.localStorage.setItem(key, JSON.stringify(state));\n  }, [state]);\n\n  return [state, dispatch];\n}\nexport  default useLocalStorageReducer;\n","// all methods to interact w/ todos\n\nimport React, { createContext } from \"react\";\nimport todoReducer from '../reducers/todo.reducer';\nimport useLocalStorageReducer from \"../hooks/useLocalStorageReducer\";\n\nconst defaultTodos = [\n    { id: 1, task: \"Make new notes for Security study\", completed: false },\n    { id: 2, task: \"Release lady bugs into garden\", completed: true }\n];\n\n//  create the context itself\n\nexport const TodosContext = createContext();\nexport const DispatchContext = createContext();\n\n// we already have the useTodoState hook that gives us all the pieces we need\n// what is missing is a context that will call this hook and then use these pieces and store them as a value for that context\nexport function TodosProvider(props) {\n    const [todos, dispatch] = useLocalStorageReducer(\"todos\", defaultTodos, todoReducer);\n    return (\n        // in the TodosContext we need to pass just one thing, not an object like before\n        <TodosContext.Provider value={todos}>\n            {/* pass  the actual value of dispatch - not a new object */}\n            <DispatchContext.Provider value={dispatch}>\n                {/* the component TodosProvider will wrapp around to whatever the children are */}\n                {/* props.children are wrapped in 2 compenents */}\n                {props.children}\n            </DispatchContext.Provider>\n        </TodosContext.Provider>\n    )\n}","import React, { useContext } from \"react\";\nimport useInputState from \"../hooks/useInputState\";\nimport TextField from \"@material-ui/core/TextField\";\nimport {  DispatchContext } from \"../contexts/todos.contex\";\n\nfunction EditTodoForm({ id, task, toggleEditForm }) {\n  const [value, handleChange, reset] = useInputState(task);\n  const dispatch = useContext(DispatchContext);\n  return (\n    <form\n      onSubmit={e => {\n        e.preventDefault();\n        dispatch({type: \"EDIT\", id: id, newTask: value});\n        reset();\n        toggleEditForm();\n      }}\n      style={{ marginLeft: \"1rem\", width: \"50%\" }}\n    >\n      <TextField\n        margin='normal'\n        value={value}\n        onChange={handleChange}\n        fullWidth\n        autoFocus\n      />\n    </form>\n  );\n}\nexport default EditTodoForm;\n","import React, { useContext, memo } from \"react\";\nimport useToggleState from \"../hooks/useToggleState\";\nimport EditTodoForm from \"./EditTodoForm\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItem\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport { DispatchContext } from \"../contexts/todos.contex\";\n\nfunction Todo({ id, task, completed }) {\n  const [isEditing, toggle] = useToggleState(false);\n  const dispatch  = useContext(DispatchContext);\n  return (\n    <ListItem style={{ height: \"64px\" }}>\n      {isEditing ? (\n        <EditTodoForm\n          // editTodo={editTodo} - no need to pass this any more - we get it from directly from the context\n          id={id}\n          task={task}\n          toggleEditForm={toggle}\n        />\n      ) : (\n        <>\n          <Checkbox\n            tabIndex={-1}\n            checked={completed}\n            onClick={() => {dispatch({type: \"TOGGLE\", id: id})}}\n          />\n          <ListItemText\n            style={{ textDecoration: completed ? \"line-through\" : \"none\" }}\n          >\n            {task}\n          </ListItemText>\n          <ListItemSecondaryAction>\n            <IconButton aria-label='Delete' onClick={() => {dispatch({type: \"REMOVE\", id: id})}}>\n              <DeleteIcon />\n            </IconButton>\n            <IconButton aria-label='Edit' onClick={toggle}>\n              <EditIcon />\n            </IconButton>\n          </ListItemSecondaryAction>\n        </>\n      )}\n    </ListItem>\n  );\n}\n\nexport default memo(Todo);\n","import React, { useContext } from \"react\";\nimport Todo from \"./Todo\";\nimport Paper from \"@material-ui/core/Paper\";\nimport List from \"@material-ui/core/List\";\nimport Divider from \"@material-ui/core/Divider\";\nimport { TodosContext } from \"../contexts/todos.contex\";\n\nfunction TodoList() {\n  const todos  = useContext(TodosContext);\n  if (todos.length)\n    return (\n      <Paper>\n        <List>\n          {todos.map((todo, i) => (\n            // To add a key to a fragment, we have to use the long-hand version\n            // rather than <> </>, we have to use <React.Fragment>\n            <React.Fragment key={i}>\n              <Todo\n                {...todo}\n                key={todo.id}\n              />\n              {i < todos.length - 1 && <Divider />}\n            </React.Fragment>\n          ))}\n        </List>\n      </Paper>\n    );\n  return null;\n}\nexport default TodoList;\n","import React, { useContext } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Paper from \"@material-ui/core/Paper\";\nimport useInputState from \"../hooks/useInputState\";\nimport { DispatchContext } from \"../contexts/todos.contex\";\n\nfunction TodoForm() {\n  const [value, handleChange, reset] = useInputState(\"\");\n  const dispatch = useContext(DispatchContext); // get the { dispatch}  from the TodosContext\n\n  return (\n    <Paper style={{ margin: \"1rem 0\", padding: \"0 1rem\" }}>\n      <form\n        onSubmit={e => {\n          e.preventDefault();\n          dispatch({type: \"ADD\", task: value})\n          reset();\n        }}\n      >\n        <TextField\n          value={value}\n          onChange={handleChange}\n          margin='normal'\n          label='Add New Todo'\n          fullWidth\n        />\n      </form>\n    </Paper>\n  );\n}\nexport default TodoForm;\n","import {\n    useState,\n    useEffect\n} from \"react\";\n\nfunction useLocalStorageState(key, defaultVal) {\n    // make piece of state, based on off of value from localStorage\n    const [state, setState] = useState(() => {\n        let val;\n        try {\n            val = JSON.parse(window.localStorage.getItem(key)) || String(defaultVal);\n        } catch (e) {\n            val = defaultVal;\n        }\n        return val;\n    });\n    // use useEffect to update localStorage when state changes\n    useEffect(() => {\n        window.localStorage.setItem(key, JSON.stringify(state));\n    }, [state]);\n    return [state, setState];\n}\nexport default useLocalStorageState;","import uuid from \"uuid/v4\";\nimport useLocalStorageState from \"./useLocalStorageState\";\n\nexport default initialTodos => {\n  const [todos, setTodos] = useLocalStorageState('todos',initialTodos);\n  // we are using the useLocalStorageState custom hook inside the useTodoState custom hook\n  return {\n    todos,\n    addTodo: newTodoText => {\n      setTodos([...todos, { id: uuid(), task: newTodoText, completed: false }]);\n    },\n    removeTodo: todoId => {\n      //filter out removed todo\n      const updatedTodos = todos.filter(todo => todo.id !== todoId);\n      //call setTodos with new todos array\n      setTodos(updatedTodos);\n    },\n    toggleTodo: todoId => {\n      const updatedTodos = todos.map(todo =>\n        todo.id === todoId ? { ...todo, completed: !todo.completed } : todo\n      );\n      setTodos(updatedTodos);\n    },\n    editTodo: (todoId, newTask) => {\n      const updatedTodos = todos.map(todo =>\n        todo.id === todoId ? { ...todo, task: newTask } : todo\n      );\n      setTodos(updatedTodos);\n    }\n  };\n};\n","import React from \"react\";\nimport TodoList from \"./TodoList\";\nimport TodoForm from \"./TodoForm\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport useTodoState from \"../hooks/useTodoState\";\nimport { TodosProvider } from \"../contexts/todos.contex\";\n// import useLocalStorageState from \"./hooks/useLocalStorageState\";\n\nfunction TodoApp() {\n  const initialTodos = [{ id: 1, task: \"Make security notes\", completed: false }]\n  const { todos, addTodo, removeTodo, toggleTodo, editTodo } = useTodoState(\n    initialTodos\n  );\n\n  // const [mood, setMood] = useLocalStorageState(\"mood\", \"happy\");\n  return (\n    <Paper\n      style={{\n        padding: 0,\n        margin: 0,\n        height: \"100vh\",\n        backgroundColor: \"#fafafa\"\n      }}\n      elevation={0}\n    >\n      <Grid container justify='center' style={{ marginTop: \"1rem\" }}>\n        <Grid item xs={11} md={8} lg={4}>\n          <TodosProvider>\n            <TodoForm addTodo={addTodo} />\n            <TodoList\n              todos={todos}\n              removeTodo={removeTodo}\n              toggleTodo={toggleTodo}\n              editTodo={editTodo}\n            />\n            {/* <button onClick={()=>setMood(\"angry\")}>Click to get angry</button> */}\n          </TodosProvider>\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n}\nexport default TodoApp;\n","import { fade } from \"@material-ui/core/styles/colorManipulator\";\nconst styles = theme => ({\n  root: {\n    width: \"100%\",\n    marginBottom: 0\n  },\n  grow: {\n    flexGrow: 1\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20\n  },\n  title: {\n    display: \"none\",\n    [theme.breakpoints.up(\"sm\")]: {\n      display: \"block\"\n    }\n  },\n  search: {\n    position: \"relative\",\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    \"&:hover\": {\n      backgroundColor: fade(theme.palette.common.white, 0.25)\n    },\n    marginLeft: 0,\n    width: \"100%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      marginLeft: theme.spacing.unit,\n      width: \"auto\"\n    }\n  },\n  searchIcon: {\n    width: theme.spacing.unit * 9,\n    height: \"100%\",\n    position: \"absolute\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  inputRoot: {\n    color: \"inherit\",\n    width: \"100%\"\n  },\n  inputInput: {\n    paddingTop: theme.spacing.unit,\n    paddingRight: theme.spacing.unit,\n    paddingBottom: theme.spacing.unit,\n    paddingLeft: theme.spacing.unit * 10,\n    transition: theme.transitions.create(\"width\"),\n    width: \"100%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      width: 120,\n      \"&:focus\": {\n        width: 200\n      }\n    }\n  }\n});\n\nexport default styles;\n","import React, { createContext } from \"react\";\nimport useToggleState from \"../hooks/useToggleState\";\n\nexport const ThemeContext = createContext();\n\nexport function ThemeProvider(props) {\n  const [isDarkMode, toggleTheme] = useToggleState(false);\n  return (\n    <ThemeContext.Provider value={{ isDarkMode, toggleTheme }}>\n      {props.children}\n    </ThemeContext.Provider>\n  );\n}\n","import React, { createContext, useState } from \"react\";\n\nexport const LanguageContext = createContext();\n\nexport function LanguageProvider(props) {\n  const [language, setLanguage] = useState(\"spanish\");\n  const changeLanguage = e => setLanguage(e.target.value);\n  return (\n    <LanguageContext.Provider value={{ language, changeLanguage }}>\n      {props.children}\n    </LanguageContext.Provider>\n  );\n}\n","import React, { useContext } from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport Switch from \"@material-ui/core/Switch\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport styles from \"./styles/NavBarStyles\";\nimport { ThemeContext } from \"./contexts/ThemeContext\";\nimport { LanguageContext } from \"./contexts/LanguageContext\";\n\nconst content = {\n  english: {\n    search: \"Search\",\n    flag: \"🇬🇧\"\n  },\n  french: {\n    search: \"Chercher\",\n    flag: \"🇫🇷\"\n  },\n  spanish: {\n    search: \"Buscar\",\n    flag: \"🇪🇸\"\n  }\n};\nfunction Navbar(props) {\n  const { isDarkMode, toggleTheme } = useContext(ThemeContext);\n  const { language } = useContext(LanguageContext);\n  const { classes } = props;\n  const { search, flag } = content[language];\n  return (\n    <div className={classes.root}>\n      <AppBar position='static' color={isDarkMode ? \"default\" : \"primary\"}>\n        <Toolbar>\n          <IconButton className={classes.menuButton} color='inherit'>\n            <span>{flag}</span>\n          </IconButton>\n          <Typography className={classes.title} variant='h6' color='inherit'>\n            App Title\n          </Typography>\n          <Switch onChange={toggleTheme} />\n          <div className={classes.grow} />\n          <div className={classes.search}>\n            <div className={classes.searchIcon}>\n              <SearchIcon />\n            </div>\n            <InputBase\n              placeholder={`${search}...`}\n              classes={{\n                root: classes.inputRoot,\n                input: classes.inputInput\n              }}\n            />\n          </div>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\nexport default withStyles(styles)(Navbar);\n","const styles = theme => ({\n  main: {\n    width: \"auto\",\n    display: \"block\",\n    marginLeft: theme.spacing.unit * 3,\n    marginRight: theme.spacing.unit * 3,\n    [theme.breakpoints.up(\"sm\")]: {\n      width: 400,\n      marginLeft: \"auto\",\n      marginRight: \"auto\"\n    }\n  },\n  paper: {\n    marginTop: theme.spacing.unit * 8,\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    padding: `${theme.spacing.unit * 2}px ${theme.spacing.unit * 3}px ${theme\n      .spacing.unit * 3}px`\n  },\n  avatar: {\n    margin: theme.spacing.unit,\n    backgroundColor: theme.palette.secondary.main\n  },\n  form: {\n    width: \"100%\",\n    marginTop: theme.spacing.unit * 3\n  },\n  submit: {\n    marginTop: theme.spacing.unit * 3\n  }\n});\nexport default styles;\n","import React, { useContext } from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport styles from \"../styles/FormStyles\";\nimport { LanguageContext } from \"../contexts/LanguageContext\";\nconst words = {\n  english: {\n    signIn: \"Sign In\",\n    email: \"Email Address\",\n    password: \"Password\",\n    remember: \"Remember Me\"\n  },\n  french: {\n    signIn: \"Se Connecter\",\n    email: \"Adresse Électronique\",\n    password: \"Mot de Passe\",\n    remember: \"Souviens-toi De Moi\"\n  },\n  spanish: {\n    signIn: \"Registrarse\",\n    email: \"Correo Electrónico\",\n    password: \"Contraseña\",\n    remember: \"Recuérdame\"\n  }\n};\nfunction Form(props) {\n  const { language, changeLanguage } = useContext(LanguageContext);\n  const { classes } = props;\n  const { email, signIn, password, remember } = words[language];\n  return (\n    <main className={classes.main}>\n      <Paper className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography variant='h5'>{signIn}</Typography>\n        <Select value={language} onChange={changeLanguage}>\n          <MenuItem value='english'>English</MenuItem>\n          <MenuItem value='french'>French</MenuItem>\n          <MenuItem value='spanish'>Spanish</MenuItem>\n        </Select>\n        <form className={classes.form}>\n          <FormControl margin='normal' required fullWidth>\n            <InputLabel htmlFor='email'>{email}</InputLabel>\n            <Input id='email' name='email' autoFocus />\n          </FormControl>\n          <FormControl margin='normal' required fullWidth>\n            <InputLabel htmlFor='password'>{password}</InputLabel>\n            <Input id='password' name='password' autoFocus />\n          </FormControl>\n          <FormControlLabel\n            control={<Checkbox color='primary' />}\n            label={remember}\n          />\n          <Button\n            variant='contained'\n            type='submit'\n            fullWidth\n            color='primary'\n            className={classes.submit}\n          >\n            {signIn}\n          </Button>\n        </form>\n      </Paper>\n    </main>\n  );\n}\nexport default withStyles(styles)(Form);\n","import React, { useContext } from \"react\";\nimport { ThemeContext } from \"./contexts/ThemeContext\";\n\nexport default function PageContent(props) {\n  const { isDarkMode } = useContext(ThemeContext);\n  const styles = {\n    backgroundColor: isDarkMode ? \"black\" : \"white\",\n    height: \"100vh\",\n    width: \"100vw\"\n  };\n  return <div style={styles}>{props.children}</div>;\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from \"react\";\nimport TodoApp from \"./todo-app/TodoApp\";\nimport Navbar from \"./Navbar\";\nimport Form from \"./login-form/Form\";\nimport PageContent from \"./PageContent\";\nimport { ThemeProvider } from \"./contexts/ThemeContext\";\nimport { LanguageProvider } from \"./contexts/LanguageContext\";\n\nexport default function App() {\n    return (\n        <ThemeProvider>\n            <LanguageProvider>\n                <PageContent>\n                    <Navbar />\n                    <Form />\n                    <TodoApp />\n                </PageContent>\n            </LanguageProvider>\n        </ThemeProvider>\n    );\n}"],"sourceRoot":""}