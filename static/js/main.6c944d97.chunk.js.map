{"version":3,"sources":["hooks/useToggleState.js","hooks/useInputState.js","contexts/todos.contex.js","hooks/useLocalStorageReducer.js","todo-app/EditTodoForm.js","todo-app/Todo.js","todo-app/TodoApp.js","styles/NavBarStyles.js","contexts/ThemeContext.js","contexts/LanguageContext.js","Navbar.js","styles/FormStyles.js","login-form/Form.js","PageContent.js","serviceWorker.js","index.js","App.js"],"names":["useToggle","initialVal","arguments","length","undefined","_useState","useState","_useState2","Object","slicedToArray","state","setState","useInputState","value","setValue","e","target","createContext","useLocalStorageReducer","DispatchContext","EditTodoForm","_ref","id","task","toggleEditForm","_useInputState","_useInputState2","handleChange","reset","dispatch","useContext","react_default","a","createElement","onSubmit","preventDefault","type","newTask","style","marginLeft","width","TextField_default","margin","onChange","fullWidth","autoFocus","memo","completed","_useToggleState","useToggleState","_useToggleState2","isEditing","toggle","ListItem_default","height","todo_app_EditTodoForm","Fragment","Checkbox_default","tabIndex","checked","onClick","textDecoration","ListItemSecondaryAction_default","IconButton_default","aria-label","Delete_default","Edit_default","TodoApp","styles","theme","root","marginBottom","grow","flexGrow","menuButton","marginRight","title","defineProperty","display","breakpoints","up","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","&:hover","spacing","unit","searchIcon","alignItems","justifyContent","inputRoot","color","inputInput","paddingTop","paddingRight","paddingBottom","paddingLeft","transition","transitions","create","&:focus","ThemeContext","ThemeProvider","props","isDarkMode","toggleTheme","Provider","children","LanguageContext","LanguageProvider","language","setLanguage","changeLanguage","content","english","flag","french","spanish","withStyles","_useContext","classes","_content$language","className","AppBar_default","Toolbar_default","Typography_default","variant","Switch_default","Search_default","InputBase_default","placeholder","concat","input","main","paper","marginTop","flexDirection","padding","avatar","secondary","form","submit","words","signIn","email","password","remember","_words$language","Paper_default","Avatar_default","LockOutlined_default","Select_default","MenuItem_default","FormControl_default","required","InputLabel_default","htmlFor","Input_default","name","FormControlLabel_default","control","label","Button_default","PageContent","Boolean","window","location","hostname","match","ReactDOM","render","src_Navbar","login_form_Form","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6c944d97.chunk.js","sourcesContent":["import { useState } from \"react\";\nfunction useToggle(initialVal = false) {\n  // call useState, \"reserve piece of state\"\n  const [state, setState] = useState(initialVal);\n  const toggle = () => {\n    setState(!state);\n  };\n  // return piece of state AND a function to toggle it\n  return [state, toggle];\n}\nexport default useToggle;\n","import { useState } from \"react\";\nexport default initialVal => {\n  const [value, setValue] = useState(initialVal);\n  const handleChange = e => {\n    setValue(e.target.value);\n  };\n  const reset = () => {\n    setValue(\"\");\n  };\n  return [value, handleChange, reset];\n};\n","// all methods to interact w/ todos\n\nimport React, { createContext } from \"react\";\nimport todoReducer from '../reducers/todo.reducer';\nimport useLocalStorageReducer from \"../hooks/useLocalStorageReducer\";\n\nconst defaultTodos = [\n    { id: 1, task: \"Make new notes for Security study\", completed: false },\n    { id: 2, task: \"Release lady bugs into garden\", completed: true }\n];\n\n//  create the context itself\n\nexport const TodosContext = createContext();\nexport const DispatchContext = createContext();\n\n// we already have the useTodoState hook that gives us all the pieces we need\n// what is missing is a context that will call this hook and then use these pieces and store them as a value for that context\nexport function TodosProvider(props) {\n    const [todos, dispatch] = useLocalStorageReducer(\"todos\", defaultTodos, todoReducer);\n    return (\n        // in the TodosContext we need to pass just one thing, not an object like before\n        <TodosContext.Provider value={todos}>\n            {/* pass  the actual value of dispatch - not a new object */}\n            <DispatchContext.Provider value={dispatch}>\n                {/* the component TodosProvider will wrapp around to whatever the children are */}\n                {/* props.children are wrapped in 2 compenents */}\n                {props.children}\n            </DispatchContext.Provider>\n        </TodosContext.Provider>\n    )\n}","import { useReducer, useEffect } from \"react\";\nfunction useLocalStorageReducer(key, defaultVal, reducer) {\n  const [state, dispatch] = useReducer(reducer, defaultVal, () => {\n    let value;\n    try {\n      value = JSON.parse(\n        window.localStorage.getItem(key) || String(defaultVal)\n      );\n    } catch (e) {\n      value = defaultVal;\n    }\n    return value;\n  });\n  useEffect(() => {\n    window.localStorage.setItem(key, JSON.stringify(state));\n  }, [state]);\n\n  return [state, dispatch];\n}\nexport  default useLocalStorageReducer;\n","import React, { useContext } from \"react\";\nimport useInputState from \"../hooks/useInputState\";\nimport TextField from \"@material-ui/core/TextField\";\nimport {  DispatchContext } from \"../contexts/todos.contex\";\n\nfunction EditTodoForm({ id, task, toggleEditForm }) {\n  const [value, handleChange, reset] = useInputState(task);\n  const dispatch = useContext(DispatchContext);\n  return (\n    <form\n      onSubmit={e => {\n        e.preventDefault();\n        dispatch({type: \"EDIT\", id: id, newTask: value});\n        reset();\n        toggleEditForm();\n      }}\n      style={{ marginLeft: \"1rem\", width: \"50%\" }}\n    >\n      <TextField\n        margin='normal'\n        value={value}\n        onChange={handleChange}\n        fullWidth\n        autoFocus\n      />\n    </form>\n  );\n}\nexport default EditTodoForm;\n","import React, { useContext, memo } from \"react\";\nimport useToggleState from \"../hooks/useToggleState\";\nimport EditTodoForm from \"./EditTodoForm\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItem\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport { DispatchContext } from \"../contexts/todos.contex\";\n\nfunction Todo({ id, task, completed }) {\n  const [isEditing, toggle] = useToggleState(false);\n  const dispatch  = useContext(DispatchContext);\n  return (\n    <ListItem style={{ height: \"64px\" }}>\n      {isEditing ? (\n        <EditTodoForm\n          // editTodo={editTodo} - no need to pass this any more - we get it from directly from the context\n          id={id}\n          task={task}\n          toggleEditForm={toggle}\n        />\n      ) : (\n        <>\n          <Checkbox\n            tabIndex={-1}\n            checked={completed}\n            onClick={() => {dispatch({type: \"TOGGLE\", id: id})}}\n          />\n          <ListItemText\n            style={{ textDecoration: completed ? \"line-through\" : \"none\" }}\n          >\n            {task}\n          </ListItemText>\n          <ListItemSecondaryAction>\n            <IconButton aria-label='Delete' onClick={() => {dispatch({type: \"REMOVE\", id: id})}}>\n              <DeleteIcon />\n            </IconButton>\n            <IconButton aria-label='Edit' onClick={toggle}>\n              <EditIcon />\n            </IconButton>\n          </ListItemSecondaryAction>\n        </>\n      )}\n    </ListItem>\n  );\n}\n\nexport default memo(Todo);\n","import React from \"react\";\nimport TodoList from \"./TodoList\";\nimport TodoForm from \"./TodoForm\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport useTodoState from \"../hooks/useTodoState\";\nimport { TodosProvider } from \"../contexts/todos.contex\";\n// import useLocalStorageState from \"./hooks/useLocalStorageState\";\n\nfunction TodoApp() {\n  const initialTodos = [{ id: 1, task: \"Make security notes\", completed: false }]\n  const { todos, addTodo, removeTodo, toggleTodo, editTodo } = useTodoState(\n    initialTodos\n  );\n\n  // const [mood, setMood] = useLocalStorageState(\"mood\", \"happy\");\n  return (\n    <Paper\n      style={{\n        padding: 0,\n        margin: 0,\n        height: \"100vh\",\n        backgroundColor: \"#fafafa\"\n      }}\n      elevation={0}\n    >\n      <Grid container justify='center' style={{ marginTop: \"1rem\" }}>\n        <Grid item xs={11} md={8} lg={4}>\n          <TodosProvider>\n            <TodoForm addTodo={addTodo} />\n            <TodoList\n              todos={todos}\n              removeTodo={removeTodo}\n              toggleTodo={toggleTodo}\n              editTodo={editTodo}\n            />\n            {/* <button onClick={()=>setMood(\"angry\")}>Click to get angry</button> */}\n          </TodosProvider>\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n}\nexport default TodoApp;\n","import { fade } from \"@material-ui/core/styles/colorManipulator\";\nconst styles = theme => ({\n  root: {\n    width: \"100%\",\n    marginBottom: 0\n  },\n  grow: {\n    flexGrow: 1\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20\n  },\n  title: {\n    display: \"none\",\n    [theme.breakpoints.up(\"sm\")]: {\n      display: \"block\"\n    }\n  },\n  search: {\n    position: \"relative\",\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    \"&:hover\": {\n      backgroundColor: fade(theme.palette.common.white, 0.25)\n    },\n    marginLeft: 0,\n    width: \"100%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      marginLeft: theme.spacing.unit,\n      width: \"auto\"\n    }\n  },\n  searchIcon: {\n    width: theme.spacing.unit * 9,\n    height: \"100%\",\n    position: \"absolute\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  inputRoot: {\n    color: \"inherit\",\n    width: \"100%\"\n  },\n  inputInput: {\n    paddingTop: theme.spacing.unit,\n    paddingRight: theme.spacing.unit,\n    paddingBottom: theme.spacing.unit,\n    paddingLeft: theme.spacing.unit * 10,\n    transition: theme.transitions.create(\"width\"),\n    width: \"100%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      width: 120,\n      \"&:focus\": {\n        width: 200\n      }\n    }\n  }\n});\n\nexport default styles;\n","import React, { createContext } from \"react\";\nimport useToggleState from \"../hooks/useToggleState\";\n\nexport const ThemeContext = createContext();\n\nexport function ThemeProvider(props) {\n  const [isDarkMode, toggleTheme] = useToggleState(false);\n  return (\n    <ThemeContext.Provider value={{ isDarkMode, toggleTheme }}>\n      {props.children}\n    </ThemeContext.Provider>\n  );\n}\n","import React, { createContext, useState } from \"react\";\n\nexport const LanguageContext = createContext();\n\nexport function LanguageProvider(props) {\n  const [language, setLanguage] = useState(\"spanish\");\n  const changeLanguage = e => setLanguage(e.target.value);\n  return (\n    <LanguageContext.Provider value={{ language, changeLanguage }}>\n      {props.children}\n    </LanguageContext.Provider>\n  );\n}\n","import React, { useContext } from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport Switch from \"@material-ui/core/Switch\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport styles from \"./styles/NavBarStyles\";\nimport { ThemeContext } from \"./contexts/ThemeContext\";\nimport { LanguageContext } from \"./contexts/LanguageContext\";\n\nconst content = {\n  english: {\n    search: \"Search\",\n    flag: \"🇬🇧\"\n  },\n  french: {\n    search: \"Chercher\",\n    flag: \"🇫🇷\"\n  },\n  spanish: {\n    search: \"Buscar\",\n    flag: \"🇪🇸\"\n  }\n};\nfunction Navbar(props) {\n  const { isDarkMode, toggleTheme } = useContext(ThemeContext);\n  const { language } = useContext(LanguageContext);\n  const { classes } = props;\n  const { search, flag } = content[language];\n  return (\n    <div className={classes.root}>\n      <AppBar position='static' color={isDarkMode ? \"default\" : \"primary\"}>\n        <Toolbar>\n          <IconButton className={classes.menuButton} color='inherit'>\n            <span>{flag}</span>\n          </IconButton>\n          <Typography className={classes.title} variant='h6' color='inherit'>\n            App Title\n          </Typography>\n          <Switch onChange={toggleTheme} />\n          <div className={classes.grow} />\n          <div className={classes.search}>\n            <div className={classes.searchIcon}>\n              <SearchIcon />\n            </div>\n            <InputBase\n              placeholder={`${search}...`}\n              classes={{\n                root: classes.inputRoot,\n                input: classes.inputInput\n              }}\n            />\n          </div>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\nexport default withStyles(styles)(Navbar);\n","const styles = theme => ({\n  main: {\n    width: \"auto\",\n    display: \"block\",\n    marginLeft: theme.spacing.unit * 3,\n    marginRight: theme.spacing.unit * 3,\n    [theme.breakpoints.up(\"sm\")]: {\n      width: 400,\n      marginLeft: \"auto\",\n      marginRight: \"auto\"\n    }\n  },\n  paper: {\n    marginTop: theme.spacing.unit * 8,\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    padding: `${theme.spacing.unit * 2}px ${theme.spacing.unit * 3}px ${theme\n      .spacing.unit * 3}px`\n  },\n  avatar: {\n    margin: theme.spacing.unit,\n    backgroundColor: theme.palette.secondary.main\n  },\n  form: {\n    width: \"100%\",\n    marginTop: theme.spacing.unit * 3\n  },\n  submit: {\n    marginTop: theme.spacing.unit * 3\n  }\n});\nexport default styles;\n","import React, { useContext } from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport styles from \"../styles/FormStyles\";\nimport { LanguageContext } from \"../contexts/LanguageContext\";\nconst words = {\n  english: {\n    signIn: \"Sign In\",\n    email: \"Email Address\",\n    password: \"Password\",\n    remember: \"Remember Me\"\n  },\n  french: {\n    signIn: \"Se Connecter\",\n    email: \"Adresse Électronique\",\n    password: \"Mot de Passe\",\n    remember: \"Souviens-toi De Moi\"\n  },\n  spanish: {\n    signIn: \"Registrarse\",\n    email: \"Correo Electrónico\",\n    password: \"Contraseña\",\n    remember: \"Recuérdame\"\n  }\n};\nfunction Form(props) {\n  const { language, changeLanguage } = useContext(LanguageContext);\n  const { classes } = props;\n  const { email, signIn, password, remember } = words[language];\n  return (\n    <main className={classes.main}>\n      <Paper className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography variant='h5'>{signIn}</Typography>\n        <Select value={language} onChange={changeLanguage}>\n          <MenuItem value='english'>English</MenuItem>\n          <MenuItem value='french'>French</MenuItem>\n          <MenuItem value='spanish'>Spanish</MenuItem>\n        </Select>\n        <form className={classes.form}>\n          <FormControl margin='normal' required fullWidth>\n            <InputLabel htmlFor='email'>{email}</InputLabel>\n            <Input id='email' name='email' autoFocus />\n          </FormControl>\n          <FormControl margin='normal' required fullWidth>\n            <InputLabel htmlFor='password'>{password}</InputLabel>\n            <Input id='password' name='password' autoFocus />\n          </FormControl>\n          <FormControlLabel\n            control={<Checkbox color='primary' />}\n            label={remember}\n          />\n          <Button\n            variant='contained'\n            type='submit'\n            fullWidth\n            color='primary'\n            className={classes.submit}\n          >\n            {signIn}\n          </Button>\n        </form>\n      </Paper>\n    </main>\n  );\n}\nexport default withStyles(styles)(Form);\n","import React, { useContext } from \"react\";\nimport { ThemeContext } from \"./contexts/ThemeContext\";\n\nexport default function PageContent(props) {\n  const { isDarkMode } = useContext(ThemeContext);\n  const styles = {\n    backgroundColor: isDarkMode ? \"black\" : \"white\",\n    height: \"100vh\",\n    width: \"100vw\"\n  };\n  return <div style={styles}>{props.children}</div>;\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from \"react\";\nimport TodoApp from \"./todo-app/TodoApp\";\nimport Navbar from \"./Navbar\";\nimport Form from \"./login-form/Form\";\nimport PageContent from \"./PageContent\";\nimport { ThemeProvider } from \"./contexts/ThemeContext\";\nimport { LanguageProvider } from \"./contexts/LanguageContext\";\n\nexport default function App() {\n    return (\n        <ThemeProvider>\n            <LanguageProvider>\n                <PageContent>\n                    <Navbar />\n                    <Form />\n                    {/* <TodoApp /> */}\n                </PageContent>\n            </LanguageProvider>\n        </ThemeProvider>\n    );\n}"],"sourceRoot":""}